#!/usr/bin/env bash

echo ""
echo "STARTER KIT"
echo "==========="
echo ""
echo "Configuring code for your new project..."
echo ""

DIR=$(echo ${PWD##*/} | sed -e 's/[^[:alnum:]]/-/g' | tr -s '-' | tr A-Z a-z)

if [ $DIR == "starter-kit" ]
then
  echo "DANGER: the directory name is \"$DIR\""
  read -e -n 1 -p "Are you sure you want to continue? [y/N] : " -r
  if [[ ! $REPLY =~ ^[Yy]$ ]]
  then
    echo "Exiting"
    exit;
  fi
fi

if `git ls-remote --exit-code upstream &>/dev/null`; then
  EXISTING_REPO=true
  echo "Existing repo detected!"
  ORIGIN_URL=`git remote get-url origin`
  if [ -z "$ORIGIN_URL" ]; then
    REPO=`basename $ORIGIN_URL | sed 's/\.git$//'`
    REV=`git rev-parse --short upstream/$STARTERKIT_BRANCH_NAME`
  else
    REPO=`basename $PWD`
    REV=`git rev-parse --short HEAD`
  fi
else
  EXISTING_REPO=false
  read -p "Do you want to create a new GitHub repo? [Y/n] " CREATE_NEW_REPO

  if [[ `tr "[:upper:]" "[:lower:]" <<< "${CREATE_NEW_REPO:=y}"` != "n" ]]; then
    read -p "New Github repo name (press enter to use default \"$DIR\") : " NAME
    read -p "Description of the project displayed on Github : " DESCRIPTION
    REPO=$(echo ${NAME:-$DIR} | sed -e 's/[^[:alnum:]]/-/g' | tr -s '-' | tr A-Z a-z)
  else
    read -p "What do you want to call this project? (press enter to use default \"$DIR\") : " NAME
    REPO=$(echo ${NAME:-$DIR} | sed -e 's/[^[:alnum:]]/-/g' | tr -s '-' | tr A-Z a-z)
  fi
  REV=$(git rev-parse --short HEAD)
fi

DEFAULTURL="https://ig.ft.com/${REPO}"

read -p "Live URL (press enter for default \"${DEFAULTURL}\") : " URL
read -p "If you have a Link File UUID paste if here: " UUID
URL=${URL:-$DEFAULTURL}

if [[ ! $URL =~ ^https?\:\/\/ ]]
then
  URL="https://ig.ft.com/${URL}"
fi
echo "Setting URL to $URL"

template_str=$(cat readme.md.template)

if [ -n "$UUID" ]
then
  echo "Adding $UUID to ./uuid file"
  echo $UUID > uuid
fi

if [[ EXISTING_REPO == true ]]; then
  git remote remove upstream
else
  echo "Trash git history for starter-kit"
  rm -rf .git
  git init
  git add .
  git commit -m "<starter-kit@$REV> Initial commit"
fi

echo "Delete $(rm -rfv configure install readme.md.template)"

echo "Directory: $DIR"
echo "Repo name: $REPO"
eval "echo \"${TEMPLATE_STR}\"" > README.md
eval "echo \"$(cat config/article.js)\"" > config/article.js


echo "Installing dependencies..."

npm install --link

if [[ `tr "[:upper:]" "[:lower:]" <<< "${CREATE_NEW_REPO:=y}"` != "n" ]]; then
  echo "Creating repo on Github"
  RESP=$(curl -n -v https://api.github.com/orgs/ft-interactive/repos \
  -d "{\"name\": \"${REPO}\", \"homepage\":\"${URL}\",\"description\": \"${DESCRIPTION}\", \"private\":true, \"team_id\":260487, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": false}"  | node -pe "JSON.parse(require('fs').readFileSync('/dev/stdin').toString()).message")

  echo $RESP
  git remote add origin ssh://git@github.com/ft-interactive/$REPO.git

  if [[ $RESP =~ "upgrade your plan" ]];
  then
    echo ""
    echo "No more private repos ðŸ˜­ -- please manually create repo and then run:"
    echo ""
    echo "    git push origin master"
  else
    echo "Push to Github"
    git push origin master -u
  fi
else
  echo "Skipping repo creation."
fi

echo ""
echo "DONE !!"
echo ""
